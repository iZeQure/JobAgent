@inject JobService JobService
@inject DataService DataService 

@if (JobCategories.Any() || JobCategories != null)
{
    if (JobCategories.Count != 0)
    {
        @for (int i = 0; i < JobCategories.Count; i++)
        {
            @if (JobCategories[i].Specializations != null)
            {
                <div class="dropdown py-1 px-2">
                    <a id="@RemoveWhitespace(JobCategories[i].Name)DropdownMenu" class="dropdown-toggle btn btn-link btn-sm @MenuColor text-wrap text-left cursor-pointer" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @JobCategories[i].Name <span class="badge badge-info">@GetCategoryCount(JobCategories[i].Specializations.Select(x => x.CategoryId).First()).Result</span>
                    </a>

                    <div class="dropdown-menu" aria-labelledby="@RemoveWhitespace(JobCategories[i].Name)DropdownMenu">
                        @if (JobCategories[i].Specializations.Count > 1)
                        {
                            <h6 class="dropdown-header">Uddannelses Specialer</h6>
                        }
                        else
                        {
                            <h6 class="dropdown-header">Uddannelses Speciale</h6>
                        }

                        <div class="dropdown-divider"></div>

                        @for (int j = 0; j < JobCategories[i].Specializations.Count; j++)
                        {
                            // Link : {domain}/job/CategoryId/CategoryName/SpecializationId/SpecializationName
                            <a class="dropdown-item text-wrap text-left" href="/job/@JobCategories[i].Id/@JobCategories[i].Name/@JobCategories[i].Specializations[j].Id/@JobCategories[i].Specializations[j].Name">
                                @JobCategories[i].Specializations[j].Name <span class="badge badge-info">@GetSpecializationCount(JobCategories[i].Specializations[j].Id).Result</span>
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="py-1 px-2">
                    @* Link : {domain}/job/CategoryId/CategoryName *@
                    <a class="btn btn-link btn-sm @MenuColor text-wrap text-left" href="/job/@JobCategories[i].Id/@JobCategories[i].Name">
                        @JobCategories[i].Name <span class="badge badge-info">@GetCategoryCount(JobCategories[i].Id).Result</span>
                    </a>
                </div>
            }
        }
    }
    else
    {
        <div class="container mt-2">
            <div class="alert alert-danger">
                <p>
                    @SystemMessage
                </p>
            </div>
        </div>
    }
}
else
{
    <div class="container mt-2">
        <div class="alert alert-danger">
            <p>
                @SystemMessage
            </p>
        </div>
    </div>
}

@code {
    // Testing
    List<Category> JobCategories = new List<Category>();

    public string MenuColor { get; set; } = "text-light";

    public string SystemMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (JobCategories == null || JobCategories.Count == 0) JobCategories = await JobService.GetJobMenuAsync();

            if (JobCategories.Count == 0) SystemMessage = "Fandt ikke nogen kategorier..";
        }
        catch (Exception e)
        {
            Console.WriteLine($"Job Menu Exception : {e.Message} - {e}");
            SystemMessage = "Kunne ikke indlæse menu, prøv og indlæs igen.";
        }
    }

    protected async Task<int> GetCategoryCount(int id)
    {
        return await DataService.GetCountOfJobAdvertsByCategory(id);
    }

    protected async Task<int> GetSpecializationCount(int id)
    {
        return await DataService.GetCountOfJobAdvertsBySpecializationId(id);
    }

    protected string RemoveWhitespace(string input)
    {
        return new string(input.ToCharArray()
        .Where(c => !Char.IsWhiteSpace(c))
        .ToArray());
    }
    // End Testing
}
