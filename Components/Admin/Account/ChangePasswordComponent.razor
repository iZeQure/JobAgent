@page "/admin/account/changepassword"

@using System.Security.Claims
@using JobAgent.Data
@using JobAgent.Models

@attribute [Authorize]

<EditForm Model="authorizationModel">

    @if (AuthorizationMessage != "" && AuthorizationMessage != null)
    {
        <BSAlert Color="Color.Danger">@AuthorizationMessage</BSAlert>
    }

    <ValidationSummary />
    <DataAnnotationsValidator />

    <BSFormGroup>
        <BSLabel For="inputEmail1">Email Adresse</BSLabel>
        <BSInput Id="inputEmail1" InputType="InputType.Email" IsReadonly="true" @bind-Value="user.Email" />
    </BSFormGroup>
    <BSFormGroup>
        <BSLabel For="inputPassword">Adgangskode</BSLabel>
        <BSInput Id="inputPassword" InputType="InputType.Password" Placeholder="Indtast adgangskode.." @bind-Value="authorizationModel.Password" />
    </BSFormGroup>
    <BSFormGroup>
        <BSLabel For="inputConfirmPassword">Bekræft Adgangskode</BSLabel>
        <BSInput Id="inputConfirmPassword" InputType="InputType.Password" Placeholder="Bekræft adgangskode.." @bind-Value="authorizationModel.ConfirmPassword" />
    </BSFormGroup>
    <BSButton Color="Color.Info" ButtonType="ButtonType.Submit" Class="btn-block mr-2" IsDisabled="@IsNotAuthenticated">Skift adgangskode</BSButton>

</EditForm>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    private string AuthorizationMessage { get; set; }
    private bool IsNotAuthenticated { get; set; } = true;

    public ChangePasswordModel authorizationModel = new ChangePasswordModel();
    private User user = new User()
    {
        ConsultantArea = new ConsultantArea(),
        Location = new Location()
    };
    private ClaimsPrincipal claim;

    protected async override Task OnInitializedAsync()
    {
        char[] delimiterChars = { ' ' };

        claim = (await AuthState).User;

        foreach (Claim item in claim.Claims)
        {
            if (item.Type == ClaimTypes.Email) user.Email = item.Value;
            if (item.Type == ClaimTypes.Role) user.ConsultantArea.Name = item.Value;

            if (item.Type == ClaimTypes.Name)
            {
                string[] names = item.Value.Split(delimiterChars);

                user.FirstName = names.First();
                user.LastName = names.Last();
            }
        }
    }
}
