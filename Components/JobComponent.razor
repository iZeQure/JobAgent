@page "/job/{JobAdvertCategoryName}"

@using JobAgent.Data
@using JobAgent.Services
@using JobAgent.Models
@inject JobService JobService
@inject NavigationManager NavigationManager

@if (jobAdverts == null || !jobAdverts.Any())
{
    <p><em>Indlæser @JobAdvertCategoryName ...</em></p>

    @if (!jobAdverts.Any())
    {
        <p><em>Ingen Jobs fundet indenfor @JobAdvertCategoryName kategori...</em></p>
    }
}
else
{
    <div class="card-columns">
        @foreach (var j in jobAdverts)
        {
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">@j.CompanyCVR.Name</h4>
                    <h6 class="card-subtitle mb-2">@j.Title</h6>
                    <span class="card-text d-inline-block text-truncate text-break" style="max-width: 125px;">
                        @j.JobDescription
                    </span>
                    <button @onclick="@(id => OnJobPostDetail(j.Id))" class="btn btn-info btn-sm d-block" type="button" data-toggle="modal" data-target="#jobPostingDetail">Se Detailjer</button>
                </div>
                <div class="card-footer">
                    <small class="text-muted">@j.JobRegisteredDate</small>
                </div>
            </div>
        }
    </div>

    if (jobAdvert != null)
    {
        @* Job Detail Modal *@
        <div class="modal fade jobPostingDetail" id="jobPostingDetail" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="jobPostingDetailLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="jobPostingDetailLabel">@jobAdvert.CompanyCVR.Name</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h6 class="card-subtitle">@jobAdvert.Title</h6>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-4">
                                <p>
                                    @jobAdvert.JobDescription
                                </p>
                            </div>
                        </div>
                        <hr />
                        <p>
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Tilbage</button>
                        <button type="button" class="btn btn-info">Søg Job Opslag</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string JobAdvertCategoryName { get; set; }

    JobAdvert jobAdvert = new JobAdvert();

    List<JobAdvert> jobAdverts;

    protected override async Task OnInitializedAsync()
    {
        jobAdverts = await JobService.GetJobAdvertsAsync(JobAdvertCategoryName);
    }

    protected override async Task OnParametersSetAsync()
    {
        jobAdverts = await JobService.GetJobAdvertsAsync(JobAdvertCategoryName);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        jobAdverts = await JobService.GetJobAdvertsAsync(JobAdvertCategoryName);

        await Task.FromResult(jobAdverts);
    }

    void OnJobPostDetail(int id)
    {
        var jobPosts = jobAdverts;

        jobAdvert = (from job in jobPosts
                     where job.Id == id
                     select job).FirstOrDefault();
    }
}