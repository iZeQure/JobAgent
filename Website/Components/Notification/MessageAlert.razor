@namespace JobAgent.Components.Notification

@if (!string.IsNullOrEmpty(Message))
{
    <div class="@(Container)">
        @switch (Alert)
        {
            case AlertType.Info:
                <div class="alert alert-info" role="alert">
                    <h4 class="alert-heading">Information!</h4>
                    <div class="d-flex align-items-center">
                        <span>@Message</span>

                        @if (IsLoading)
                        {
                            <div class="spinner-border spinner-border-sm text-info ml-2" role="status"></div>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(MessageOptional))
                    {
                        <hr />
                        <p class="mb-0">@MessageOptional</p>
                    }
                </div>
                break;
            case AlertType.Success:
                <div class="alert alert-success" role="alert">
                    <h4 class="alert-heading">Success!</h4>
                    <div class="d-flex align-items-center">
                        <span>@Message</span>

                        @if (IsLoading)
                        {
                            <div class="spinner-border spinner-border-sm text-success ml-2" role="status"></div>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(MessageOptional))
                    {
                        <hr />
                        <p class="mb-0">@MessageOptional</p>
                    }
                </div>
                break;
            case AlertType.Error:
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Fejl!</h4>
                    <div class="d-flex align-items-center">
                        <span>@Message</span>

                        @if (IsLoading)
                        {
                            <div class="spinner-border spinner-border-sm text-danger ml-2" role="status"></div>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(MessageOptional))
                    {
                        <hr />
                        <p class="mb-0">@MessageOptional</p>
                    }
                </div>
                break;
            case AlertType.Warning:
                <div class="alert alert-warning" role="alert">
                    <h4 class="alert-heading">System Besked!</h4>
                    <div class="d-flex align-items-center">
                        <span>@Message</span>

                        @if (IsLoading)
                        {
                            <div class="spinner-border spinner-border-sm text-warning ml-2" role="status"></div>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(MessageOptional))
                    {
                        <hr />
                        <p class="mb-0">@MessageOptional</p>
                    }
                </div>
                break;
            default:
                break;
        }
    </div>
}

@code {
    [Parameter]
    public string Message { get; set; } = string.Empty;
    [Parameter]
    public string MessageOptional { get; set; } = string.Empty;
    [Parameter]
    public AlertType Alert { get; set; }
    [Parameter]
    public bool IsLoading { get; set; } = false;
    [Parameter]
    public bool FullWidth { get; set; } = true;

    public string Container
    {
        get
        {
            if (FullWidth)
                return "container-fluid";
            else
                return "container";
        }
    }

    protected override void OnInitialized()
    {
        StateHasChanged();
    }

    public enum AlertType { Info, Warning, Error, Success }
}
