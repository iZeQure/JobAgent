@attribute [Authorize]

<div class="modal fade" id="RemoveContractModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @if (ContractId != 0)
            {
                <div class="modal-header">
                    <h5 class="modal-title">Er du sikker på du vil slette denne kontrakt?</h5>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal">Annuller</button>
                    <button type="button" class="btn btn-danger" @onclick="@(() => OnClick_RemoveContract(ContractId))">Slet Kontrakt!</button>
                </div>
            }
            else
            {
                <MessageAlert Alert="MessageAlert.AlertType.Error" Message="Noget gik galt, med at hente oplysninger." MessageOptional="Indlæs siden igen, eller prøv igen senere." />
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ContractId { get; set; }

    [Inject]
    public AdminService AdminService { get; set; }

    [Inject]
    public IRefresh RefreshService { get; set; }

    [Inject]
    public IJSRuntime JS { get; set; }

    protected async Task OnClick_RemoveContract(int id)
    {
        await AdminService.RemoveContractAsync(id);

        RefreshService.CallRefreshRequest();

        await JS.InvokeVoidAsync("confirmRemove", "RemoveContractModal");
    }
}
