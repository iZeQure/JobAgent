@attribute [Authorize]

<div class="modal fade" id="ShowContractModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kontrakt</h5>
            </div>

            <div class="modal-body">

                @if (!string.IsNullOrEmpty(ContractName))
                {
                    if (string.IsNullOrEmpty(ConvertFileToBase64String(ContractName).GetAwaiter().GetResult()))
                    {
                        <MessageAlert Alert="MessageAlert.AlertType.Warning" />
                    }
                    else
                    {
                        <div class="container-fluid justify-content-center">
                            <div class="embed-responsive embed-responsive-16by9">
                                <iframe src="data:application/pdf;base64,@(ConvertFileToBase64String(ContractName).GetAwaiter().GetResult())"
                                        class="embed-responsive-item"
                                        lang="da"
                                        title="Kontrakt Information"
                                        frameborder="1"
                                        allowtransparency="true">
                                </iframe>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <MessageAlert Alert="MessageAlert.AlertType.Error" Message="Kunne ikke hente kontrakt!" />
                }

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Luk kontrakt</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string ContractName { get; set; }

    [Inject]
    private IFileUpload GetFileService { get; set; }

    private string errorMessage = string.Empty;

    private Task<string> ConvertFileToBase64String(string contract)
    {
        try
        {
            var files = Directory.EnumerateFiles(@"\\Jobagent\contracts\");

            foreach (var file in files)
            {
                if (file.Contains(contract))
                {
                    byte[] bytes = File.ReadAllBytes(file);

                    return Task.FromResult(Convert.ToBase64String(bytes));
                }
            }
        }
        catch (Exception)
        {
            errorMessage = $"Fik ikke svar fra server..";
        }

        return Task.FromResult(string.Empty);
    }
}
