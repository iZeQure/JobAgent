@attribute [Authorize]

<div class="modal fade" id="EditSourceLinkModal" tabindex="-1" role="dialog" aria-labelledby="EditSourceLinkModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">

            @if (SourceLink == null)
            {
                <MessageAlert Alert="Notification.MessageAlert.AlertType.Warning"
                              Message="Fejl ved indlæsning af robot link." />
            }
            else
            {
                <EditForm Model="@(model)" OnValidSubmit="OnValidSubmit_EditSourceLink">

                    <div class="modal-header">
                        <h5 class="modal-title" id="EditSourceLinkModalTitle">Ændre Oplysninger for Link :</h5>
                    </div>

                    <div class="modal-body">

                        @if (ShowMessage)
                        {
                            <MessageAlert Alert="Notification.MessageAlert.AlertType.Info" Message="@MessageAlert" />
                        }

                        <DataAnnotationsValidator />

                        <div class="row">
                            <div class="col">
                                <label for="editLinkForCompany" class="admin-label">Virksomhed : <span class="small font-italic" style="color: lightcoral">Ikke muligt at ændre virksomhed endnu!</span></label>
                                @if (companies != null && SourceLink.Company != null)
                                {
                                    <select class="custom-select custom-select-sm" @bind="model.CompanyId = SourceLink.Company.Identifier">
                                        <option value="0">--Vælg en virksomhed fra listen--</option>
                                        @foreach (var company in companies)
                                        {
                                            @if (model.CompanyId == company.Identifier)
                                            {
                                                <option value="@(company.Identifier)" selected>@(company.Name)</option>
                                            }
                                            else
                                            {
                                                <option value="@(company.Identifier)">@(company.Name)</option>
                                            }
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => model.CompanyId)" />
                                }
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="editLink" class="admin-label">Link til Stillingsopslag :</label>
                                <input id="editLink" class="form-control form-control-sm" placeholder="Indtast link til stillingsopslaget.." @bind="@(model.Link = SourceLink.Link)" />
                                <ValidationMessage For="@(() => model.Link)" />
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Annuller</button>
                        <button type="submit" class="btn btn-info" disabled="@IsProcessing">Gem Ændringer</button>
                    </div>

                </EditForm>
            }

        </div>
    </div>
</div>

@code {
    [Parameter] public SourceLink SourceLink { get; set; }

    [Inject] private DataService DataService { get; set; }
    [Inject] private AdminService AdminService { get; set; }
    [Inject] private IRefresh Refresh { get; set; }
    [Inject] private IJSRuntime JS { get; set; }

    private SourceLinkModel model;
    private IEnumerable<Company> companies;

    private bool IsProcessing = false;
    private bool ShowMessage = false;

    private string MessageAlert = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        model = new();
        companies = new List<Company>();

        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            var companies = await DataService.GetCompaniesWithContractAsync();

            if (companies == null)
            {
                return;
            }

            companies = this.companies;
        }
        catch (Exception)
        {
            throw;
        }
    }

    private async Task OnValidSubmit_EditSourceLink()
    {
        IsProcessing = true;
        model.Id = SourceLink.Identifier;

        ShowMessage = true;
        if (await AdminService.UpdateSourceLinkAsync(model))
        {
            MessageAlert = "Link successfuldt opdateret!";
        }
        else
        {
            MessageAlert = "Noget gik galt, prøv igen senere.";
        }

        Refresh.CallRefreshRequest();

        IsProcessing = false;
        MessageAlert = string.Empty;

        await JS.InvokeVoidAsync("modalToggle", "EditSourceLinkModal");
        await JS.InvokeVoidAsync("OnInformationChangeAnimation", model.Id);

        ShowMessage = false;
    }
}