@attribute [Authorize]

<div id="CreateJobVacancyModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">

            @if (IsLoading)
            {
                <MessageAlert FullWidth="false" IsLoading="@IsLoading" Alert="MessageAlert.AlertType.Info" Message="Vent venligst, henter nødvendig information.." />
            }
            else
            {
                @if (JobVacancyModel != null)
                {
                    <EditForm Model="JobVacancyModel" OnValidSubmit="OnValidSubmit_CreateJobVacancy">

                        <div class="modal-header">
                            <h5 class="modal-title">Nyt Stillingsopslag :</h5>
                        </div>

                        <div class="modal-body">

                            <DataAnnotationsValidator />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputTitle" class="admin-label">Stillingsopslagets Titel :</label>
                                    <input id="regInputTitle" class="form-control form-control-sm" type="text" @bind="JobVacancyModel.Title" placeholder="Eksempel : Kager på en ny måde .." />
                                    <ValidationMessage For="@(() => JobVacancyModel.Title)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputEmail" class="admin-label">Email Adresse til Kontakt :</label>
                                    <input id="regInputEmail" class="form-control form-control-sm" type="email" @bind="JobVacancyModel.Email" placeholder="Eksempel : person123@virksomhed.dk .." />
                                    <ValidationMessage For="@(() => JobVacancyModel.Email)" />
                                </div>
                                <div class="col">
                                    <label for="regInputPhoneNumber" class="admin-label">Telefon nr. :</label>
                                    <input id="regInputPhoneNumber" class="form-control form-control-sm" type="tel" @bind="JobVacancyModel.PhoneNumber" placeholder="Eksempel : 12345678" />
                                    <ValidationMessage For="@(() => JobVacancyModel.PhoneNumber)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputDesc" class="admin-label col-form-label col-form-label-sm">Stillingsopslags Beskrivelse :</label>
                                    <textarea id="regInputDesc" class="form-control form-control-sm" style="max-height: 450px; min-height: 150px;" @bind="JobVacancyModel.Description" placeholder="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."></textarea>
                                    <ValidationMessage For="@(() => JobVacancyModel.Description)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputLocation" class="admin-label col-form-label col-form-label-sm">Lokationen for virksomheden / stillignsopslaget :</label>
                                    <input id="regInputLocation" class="form-control form-control-sm" type="text" @bind="JobVacancyModel.Location" placeholder="Eksempel : Personsvej 14, 5500 Middelfart" />
                                    <ValidationMessage For="@(() => JobVacancyModel.Location)" />
                                </div>
                                <div class="col">
                                    <label for="regInputSourceUrl" class="admin-label col-form-label col-form-label-sm">Link til stillingsopslaget :</label>
                                    <input id="regInputSourceUrl" class="form-control form-control-sm" type="text" @bind="JobVacancyModel.SourceURL" placeholder="Eksempel : https://postnr.dk/5500-middelfart" />
                                    <ValidationMessage For="@(() => JobVacancyModel.SourceURL)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputRegistrationDate" class="admin-label col-form-label col-form-label-sm">Kontrakt Registreret Dato :</label>
                                    <InputDate TValue="DateTime" @bind-Value="@(JobVacancyModel.RegisteredDate)" id="regInputRegistrationDate" class="form-control form-control-sm" />
                                    <ValidationMessage For="@(() => JobVacancyModel.RegisteredDate)" />
                                </div>
                                <div class="col">
                                    <label for="regInputExpiryDate" class="admin-label col-form-label col-form-label-sm">Udløbsdato :</label>
                                    <InputDate TValue="DateTime" @bind-Value=@(JobVacancyModel.DeadlineDate) id="regInputExpiryDate" class="form-control form-control-sm" />
                                    <ValidationMessage For="@(() => JobVacancyModel.DeadlineDate)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputCompany" class="admin-label col-form-label col-form-label-sm">Stillingsopslag Tilhører :</label>
                                    <select id="regInputCompany" class="form-control form-control-sm" @bind="JobVacancyModel.CompanyId">
                                        <option value="0" selected>---Vælg en virksomhed fra listen---</option>
                                        @foreach (var company in Companies)
                                        {
                                            <option value="@company.Identifier">@company.Name</option>
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => JobVacancyModel.CompanyId)" />
                                </div>
                            </div>

                            <hr />

                            <div class="row">
                                <div class="col">
                                    <label for="regInputCategory" class="admin-label col-form-label col-form-label-sm">Kategori :</label>
                                    <select id="regInputCategory" class="form-control form-control-sm" @onchange="OnChange_GetSpecializationByCategoryId">
                                        <option value="0" selected>---Vælg en kateori fra listen---</option>
                                        @foreach (var category in Categories)
                                        {
                                            <option value="@category.Identifier">@category.Name</option>
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => JobVacancyModel.CategoryId)" />
                                </div>
                                @if (SortedSpecializations.Count != 0)
                                {
                                    <div class="col">
                                        <label for="regInputSpecialization" class="admin-label col-form-label col-form-label-sm">Kategori Speciale :</label>
                                        <select id="regInputSpecialization" class="form-control form-control-sm" @bind="JobVacancyModel.SpecializationId">
                                            <option value="0" selected>---Vælg et speciale fra listen---</option>
                                            @foreach (var spec in SortedSpecializations)
                                            {
                                                <option value="@spec.Identifier">@(spec.Name)</option>
                                            }
                                        </select>
                                        <ValidationMessage For="@(() => JobVacancyModel.SpecializationId)" />
                                    </div>
                                }
                            </div>

                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="OnClick_CancelRequest" @onclick:preventDefault>Annuller</button>
                            <button class="btn btn-info text-light cursor-pointer" type="submit" disabled="@IsProcessing">Opret Stillingsopslag</button>
                        </div>

                    </EditForm>
                }
            }

        </div>
    </div>
</div>

@code {
    [Inject] private AdminService AdminService { get; set; }
    [Inject] private DataService DataService { get; set; }
    [Inject] private IRefresh Refresh { get; set; }
    [Inject] private IJSRuntime JS { get; set; }

    private protected JobVacancyModel JobVacancyModel;

    private List<Company> Companies = new List<Company>();
    private List<Category> Categories = new List<Category>();
    private List<Specialization> Specializations = new List<Specialization>();
    private List<Specialization> SortedSpecializations = new List<Specialization>();

    private string Information = string.Empty;

    private bool IsLoading = false;
    private bool IsProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        await Task.Delay(500);

        JobVacancyModel = new JobVacancyModel();

        Companies = await DataService.GetAllCompanies();
        Categories = await DataService.GetAllCategories();
        Specializations = await DataService.GetAllSpecializations();

        await Task.Delay(500);

        IsLoading = false;
        StateHasChanged();
    }

    private async void OnValidSubmit_CreateJobVacancy()
    {
        AdminService.CreateJobVacancy(JobVacancyModel);


        Refresh.CallRefreshRequest();
        await JS.InvokeVoidAsync("modalToggle", "CreateJobVacancyModal");
    }

    private void OnChange_GetSpecializationByCategoryId(ChangeEventArgs e)
    {
        SortedSpecializations.Clear();

        var parsed = int.TryParse(e.Value.ToString(), out int categoryId);

        if (parsed)
        {
            JobVacancyModel.CategoryId = categoryId;
            JobVacancyModel.SpecializationId = 0;

            foreach (var speciality in Specializations)
            {
                if (speciality.CategoryId == categoryId)
                {
                    SortedSpecializations.Add(speciality);
                }
            }

        }
        StateHasChanged();
    }

    private void OnClick_CancelRequest()
    {
        SortedSpecializations.Clear();
        JobVacancyModel = new JobVacancyModel();
        StateHasChanged();
    }
}
