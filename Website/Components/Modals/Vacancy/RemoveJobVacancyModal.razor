@attribute [Authorize]

<div class="modal fade" id="RemoveJobVacancyModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @if (Id != 0)
            {
                <div class="modal-header">
                    <h5 class="modal-title">Er du sikker på du vil slette denne virksomhed?</h5>
                </div>

                <div class="modal-body">
                    <p><small>Ved sletning af en virksomhed, bliver alle andre referencer til virksomheden også slettet.</small></p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="CancelRequest">Annuller</button>
                    <button type="button" class="btn btn-danger" @onclick="@(() => OnClick_RemoveJobVacancy(Id))" disabled="@IsProcessing">Slet Virksomhed</button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }

    [Inject] private IRefresh _refresh { get; set; }
    [Inject] private IJSRuntime _jS { get; set; }
    [Inject] private AdminService adminService { get; set; }

    private bool IsProcessing = false;

    private async void OnClick_RemoveJobVacancy(int id)
    {
        IsProcessing = true;

        adminService.RemoveJobVacancyById(id);

        IsProcessing = false;

        _refresh.CallRefreshRequest();

        await _jS.InvokeVoidAsync("modalToggle", "RemoveJobVacancyModal");
    }

    private void CancelRequest()
    {
        _refresh.CallRefreshRequest();
    }
}
