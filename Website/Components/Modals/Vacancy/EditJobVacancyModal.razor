@attribute [Authorize]

<div class="modal fade" id="EditJobVacancyModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">

            @if (Model == null)
            {
                <MessageAlert Alert="MessageAlert.AlertType.Warning" FullWidth="true" Message="Vent venligst, henter detailjer på stillingsopslag!" />
            }
            else
            {
                <EditForm Model="Model" OnValidSubmit="OnValidSubmit_EditJobVacancy">

                    <DataAnnotationsValidator />

                    <div class="modal-header">
                        <input id="inputTitle" type="text" class="form-control form-control-sm" placeholder="Indtast titel" @bind-value="Model.Title" />
                        <ValidationMessage For="@(() => Model.Title)" />
                    </div>

                    <div class="modal-body">
                        <div class="row">
                            <div class="col">
                                <label for="inputEmail" class="admin-label col-form-label col-form-label-sm">Email Adresse :</label>
                                <input id="inputEmail" class="form-control form-control-sm" type="email" placeholder="Indtast email adressse" @bind-value="Model.Email" />
                                <ValidationMessage For="@(() => Model.Email)" />
                            </div>
                            <div class="col">
                                <label for="inputPhoneNumber" class="admin-label col-form-label col-form-label-sm">Telefon nr. :</label>
                                <input id="inputPhoneNumber" class="form-control form-control-sm" type="text" placeholder="Indtast telefon nr." @bind-value="Model.PhoneNumber" />
                                <ValidationMessage For="@(() => Model.PhoneNumber)" />
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="inputDesc" class="admin-label col-form-label col-form-label-sm">Beskrivelse :</label>
                                <textarea id="inputDesc" class="form-control form-control-sm" style="max-height: 450px; min-height: 150px;" @bind="Model.Description"></textarea>
                                <ValidationMessage For="@(() => Model.Description)" />
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="inputLocation" class="admin-label col-form-label col-form-label-sm">Lokation :</label>
                                <input id="inputLocation" class="form-control form-control-sm" placeholder="Indtast lokation" @bind-value="Model.Location" />
                                <ValidationMessage For="@(() => Model.Location)" />
                            </div>
                            <div class="col">
                                <label for="inputCompany" class="admin-label col-form-label col-form-label-sm">Virksomhed :</label>
                                <select class="form-control form-control-sm" @bind="Model.CompanyId">
                                    @foreach (var comp in Companies)
                                    {
                                        @if (comp.Identifier == Model.CompanyId)
                                        {
                                            <option value="@comp.Identifier" selected>@comp.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@comp.Identifier">@comp.Name</option>
                                        }
                                    }
                                </select>
                                <ValidationMessage For="@(() => Model.CompanyId)" />
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="inputSourceUrl" class="admin-label col-form-label col-form-label-sm">Link til Stillingsopslag :</label>
                                <input id="inputSourceUrl" class="form-control form-control-sm" placeholder="Indtast stillingsopslagets URL" @bind-value="Model.SourceURL" />
                                <ValidationMessage For="@(() => Model.SourceURL)" />
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="inputRegisteredDate" class="admin-label col-form-label col-form-label-sm">Opslag Registeret :</label>
                                <InputDate id="inputRegisteredDate" @bind-Value="@Model.RegisteredDate" TValue="DateTime" class="form-control form-control-sm"></InputDate>
                                <ValidationMessage For="@(() => Model.RegisteredDate)" />
                            </div>
                            <div class="col">
                                <label for="inputDeadlineDate" class="admin-label col-form-label col-form-label-sm">Ansøgningsfrist :</label>
                                <InputDate id="inputDeadlineDate" @bind-Value="@Model.DeadlineDate" TValue="DateTime" class="form-control form-control-sm"></InputDate>
                                <ValidationMessage For="@(() => Model.DeadlineDate)" />
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col">
                                <label for="inputConsultantArea" class="admin-label col-form-label col-form-label-sm">Kategori :</label>
                                <select class="form-control form-control-sm" @onchange="OnChange_SortSpecializationListByCategoryId">
                                    @if (Model.CategoryId == 0)
                                    {
                                        <option value="0">Ikke Kategoriseret</option>
                                    }

                                    @foreach (var cat in Categories)
                                    {
                                        @if (cat.Identifier == Model.CategoryId)
                                        {
                                            <option value="@cat.Identifier" selected>@cat.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@cat.Identifier">@cat.Name</option>
                                        }
                                    }
                                </select>
                                <ValidationMessage For="@(() => Model.CategoryId)" />
                            </div>
                            @if (SortedSpecializations.Count != 0)
                            {
                                <div class="col">
                                    <label for="inputLocation" class="admin-label col-form-label col-form-label-sm">Kategori Speciale :</label>
                                    <select class="form-control form-control-sm" @bind="Model.SpecializationId">
                                        @foreach (var spec in SortedSpecializations)
                                        {
                                            @if (spec.Identifier == Model.SpecializationId)
                                            {
                                                <option value="@spec.Identifier">@spec.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@spec.Identifier">@spec.Name</option>
                                            }
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => Model.SpecializationId)" />
                                </div>
                            }
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="OnClick_CancelRequest" @onclick:preventDefault>Annuller</button>
                        <button class="btn btn-info text-light cursor-pointer" type="submit" disabled="@(IsProcessing)">Gem ændringer</button>
                    </div>
                </EditForm>
            }

        </div>
    </div>
</div>

@code {
    [Parameter] public JobVacancyModel Model { get; set; }

    [Inject] IRefresh Refresh { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }
    [Inject] AdminService AdminService { get; set; }
    [Inject] DataService DataService { get; set; }

    private IEnumerable<Company> Companies = new List<Company>();
    private IEnumerable<Category> Categories = new List<Category>();
    private IEnumerable<Specialization> Specializations = new List<Specialization>();
    private IList<Specialization> SortedSpecializations = new List<Specialization>();

    private bool IsProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        Companies = await DataService.GetAllCompanies();
        Categories = await DataService.GetAllCategories();
        Specializations = await DataService.GetAllSpecializations();

        StateHasChanged();
    }

    private async Task OnValidSubmit_EditJobVacancy()
    {
        IsProcessing = true;

        await AdminService.UpdateJobVacancyAsync(Model);

        Refresh.CallRefreshRequest();
        IsProcessing = false;

        await JSRuntime.InvokeVoidAsync("modalToggle", "EditJobVacancyModal");
        await JSRuntime.InvokeVoidAsync("OnInformationChangeAnimation", $"{Model.Id}");
    }

    private void OnChange_SortSpecializationListByCategoryId(ChangeEventArgs e)
    {
        SortedSpecializations.Clear();
        var parsed = int.TryParse(e.Value.ToString(), out int categoryId);

        if (parsed)
        {
            Model.CategoryId = categoryId;
            Model.SpecializationId = 0;

            foreach (var speciality in Specializations)
            {
                if (speciality.CategoryId == categoryId)
                {
                    SortedSpecializations.Add(speciality);
                }
            }

            StateHasChanged();
        }
    }

    private void OnClick_CancelRequest()
    {
        SortedSpecializations.Clear();
        Model = new JobVacancyModel();
        StateHasChanged();
    }
}
