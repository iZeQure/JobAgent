@page "/admin/account/changepassword"

@inject SecurityService SecurityService
@inject AdminService AdminService

@attribute [Authorize]
@* Page Title *@
<PageTitle Title="Skift Adgangskode" />

<PageDisplayName DisplayName="Skift Adgangskode" />

<MessageAlert FullWidth="false" Alert="MessageAlert.AlertType.Success" Message="@Message" />
<MessageAlert FullWidth="false" Alert="MessageAlert.AlertType.Error" Message="@ErrorMessage" />

<div class="container">
    <EditForm Model="@ChangePasswordModel" OnValidSubmit="OnValidSubmit_ChangeUserPassword">

        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="inputEmail1" class="admin-label">Email Adresse :</label>
            <input id="inputEmail1" type="email" class="form-control form-control-sm" readonly @bind="ChangePasswordModel.Email" />
            <ValidationMessage For="@(() => ChangePasswordModel.Email)" />
        </div>
        <hr />
        <div class="form-group">
            <label for="inputPassword" class="admin-label">Ny Adgangskode :</label>
            <input id="inputPassword" type="password" class="form-control form-control-sm" placeholder="Indtast adgangskode.." @bind="ChangePasswordModel.Password" />
            <ValidationMessage For="@(() => ChangePasswordModel.Password)" />
        </div>
        <hr />
        <div class="form-group">
            <label for="inputConfirmPassword" class="admin-label">Bekræft Adgangskode :</label>
            <input id="inputConfirmPassword" type="password" class="form-control form-control-sm" placeholder="Bekræft adgangskode.." @bind="ChangePasswordModel.ConfirmPassword" />
            <ValidationMessage For="@(() => ChangePasswordModel.ConfirmPassword)" />
            <ValidationSummary Model="@ChangePasswordModel" />
        </div>
        <hr />
        <button type="submit" class="btn btn-sm btn-info float-right ml-auto mt-5" disabled="@IsProcessing">
            @if (IsProcessing)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span>Skifter adgangskode...</span>
            }
            else
            {
                <span>Skift adgangskode</span>
            }
        </button>

    </EditForm>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; }

    private string ErrorMessage { get; set; }
    private string Message { get; set; }
    private bool IsProcessing;

    private ChangePasswordModel ChangePasswordModel = new ChangePasswordModel();
    private ClaimsPrincipal claim;

    protected async override Task OnInitializedAsync()
    {
        claim = (await AuthState).User;

        foreach (Claim item in claim.Claims)
        {
            if (item.Type == ClaimTypes.Email) ChangePasswordModel.Email = item.Value;
        }
    }

    private async Task OnValidSubmit_ChangeUserPassword()
    {
        IsProcessing = true;

        await Task.Delay(1250);

        await InvokeAsync(() =>
        {
            AdminService.UpdateUserPassword(ChangePasswordModel);
        });

        IsProcessing = false;
        Message = "Adgangskode blev ændret!";
        StateHasChanged();

        await Task.Delay(1750);

        Message = string.Empty;
        ChangePasswordModel.Password = string.Empty;
        ChangePasswordModel.ConfirmPassword = string.Empty;
    }
}
