@page "/admin/settings/companies"

@attribute [Authorize]

<PageTitle Title="Indstillinger for Virksomheder" />

<div class="d-flex">
    <PageDisplayName DisplayName="Administrer Virksomheder" />
    <div class="d-inline-block">
        <a class="btn btn-sm btn-info cursor-pointer text-white" data-toggle="modal" data-target="#CreateCompanyModal">
            Opret ny Virksomhed
        </a>
    </div>
</div>

@if (companies != null)
{
    @if (dataIsLoading)
    {
        <MessageAlert IsLoading="dataIsLoading" Message="Indlæser data...">

        </MessageAlert>
    }
    else
    {
        @if (companies.Count() == 0)
        {
            <MessageAlert Alert="MessageAlert.AlertType.Warning"
                          Message="Der blev ikke fundet nogen virksomheder."
                          MessageOptional="Opret virksomheder, ved at trykke på knappen : Opret ny Virksomhed." />
        }
        else
        {
            <div class="table-responsive table-responsive-sm table-responsive-md">
                <table class="table table-sm table-striped table-hover">
                    <caption>Liste over virksomheders kontrakter..</caption>
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Virksomhedens CVR</th>
                            <th scope="col">Navn</th>
                            <th scope="col">Link til Virksomhed</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var company in companies)
                        {
                            <tr id="@(company.Identifier)">
                                <th scope="row">@(company.Identifier)</th>
                                <td>@(company.CVR)</td>
                                <td>@(company.Name)</td>
                                <td>@(company.URL)</td>
                                <td>
                                    <span @onclick="(OnClickEvent => OnClick_OpenEditModal(company.Identifier))" data-toggle="modal" data-target="#EditCompanyModal">
                                        <Popover Title="Ændre information" Body="Ved denne funktion, kan du ændre informationen på denne virksomehd." Color="Popover.PopoverType.Info" />
                                    </span>
                                </td>
                                <td>
                                    <span @onclick="(OnClickEvent => OnClick_RemoveCompanyModal(company.Identifier))" data-toggle="modal" data-target="#RemoveCompanyModal">
                                        <Popover Title="Forsigtig!" Body="Denne knap sletter det valgte opslag, forevigt!" Color="Popover.PopoverType.Danger" />
                                    </span>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        }

        <CreateCompanyModal />

        <EditCompanyModal CompanyModel="model" />

        <RemoveCompanyModal CompanyId="companyId" />
    }
}
else
{
    <MessageAlert Alert="MessageAlert.AlertType.Error"
                  Message="Prøv at genindlæs siden."
                  MessageOptional="@(errorMessage)" />
}

@code {
    [Inject] protected DataService DataService { get; set; }
    [Inject] protected AdminService AdminService { get; set; }
    [Inject] protected IJSRuntime JSRuntime { get; set; }
    [Inject] protected IRefresh RefreshService { get; set; }

    private IEnumerable<Company> companies = new List<Company>();

    private CompanyModel model { get; set; } = new CompanyModel();
    private int companyId { get; set; }
    private string errorMessage = string.Empty;
    private bool dataIsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        RefreshService.RefreshRequest += UpdateContentAsync;

        companies = await LoadData();

        dataIsLoading = false;
    }

    private async Task<IEnumerable<Company>> LoadData()
    {
        dataIsLoading = true;

        return await DataService.GetAllCompaniesAsync();
    }

    private async Task UpdateContentAsync()
    {
        try
        {
            var companies = await DataService.GetAllCompaniesAsync();

            if (companies != null)
            {
                this.companies = companies;
                return;
            }

            this.companies = null;
        }
        catch (Exception) { errorMessage = "Ukendt Fejl ved opdatering af virksomheder."; }
        finally { StateHasChanged(); }
    }

    private async void OnClick_OpenEditModal(int id)
    {
        var company = await DataService.GetCompanyByIdAsync(id);

        model = new CompanyModel()
        {
            Id = company.Identifier,
            CVR = company.CVR,
            Name = company.Name,
            URL = company.URL
        };
    }

    private void OnClick_RemoveCompanyModal(int id)
    {
        companyId = id;
    }
}
