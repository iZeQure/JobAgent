@using System.Security.Claims
@using JobAgent.Data
@using JobAgent.Models
@using JobAgent.Components.Notification

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@inherits LayoutComponentBase

<div class="sidebar overflow-auto" style="overflow-x: hidden !important">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row">
        <AuthorizeView>
            <Authorized>
                @if (context.User.Identity.IsAuthenticated)
                {
                    <div class="welcome-message">
                        <p>Velkommen, @context.User.Identity.Name!</p>
                        <div class="d-flex">
                            @foreach (var claim in context.User.Claims)
                            {
                                @if (claim.Type == ClaimTypes.Role)
                                {
                                    <p class="text-muted smaller pr-2">@claim.Value</p>
                                }
                                @if (claim.Type == "LocationName")
                                {
                                    <p class="text-muted smaller pr-2">@claim.Value</p>
                                }
                            }
                        </div>
                    </div>

                    <div class="float-right ml-auto mr-1">
                        <button type="button" class="btn btn-danger btn-sm" @onclick="(() => LogOut())">Log ud</button>
                    </div>
                }
            </Authorized>
            <NotAuthorized>
                <a class="btn btn-info btn-sm ml-auto mr-1" type="button" href="/login">Praktikkonsulent Log ind</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="content px-4">
        <ToastNotificationComponent />

        @Body
    </div>
</div>

@code {
    public async Task LogOut()
    {
        PageMetaModel.Instance.Title = "Du er nu logget ud";
        await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("", true);
    }
}