@page "/job/uncategorized"

<PageTitle Title="Ikke kategoriseret stillingsopslag" />

@if (!UncategorizedJobAdverts.Any())
{
    @if (IsLoading)
    {
        <MessageAlert Alert="@(MessageAlert.AlertType.Info)" Message="Vent venligst!" MessageOptional="Henter stillingsopslag." IsLoading="@(IsLoading)" FullWidth="false" />
    }
    else
    {
        <MessageAlert Alert="@(MessageAlert.AlertType.Warning)" Message="Beklager! Job Agenten fandt ingen stillinger inden for denne kategori." FullWidth="false" />
    }
}
else
{
    <div class="card-columns">
        @foreach (var job in UncategorizedJobAdverts)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@job.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@(job.Company.Name), @(job.JobLocation)</h6>
                    <p class="card-text">@job.JobDescription</p>
                    <p class="card-text">
                        <small class="text-muted">
                            @job.JobRegisteredDate.ToString("dddd, d MMM yyyy", CultureInfo.CreateSpecificCulture("da-DK"))
                        </small>
                    </p>
                    <button @onclick="@(id => OnClick_GetDetails(job.Id))" class="btn btn-info btn-sm d-block" type="button" data-toggle="modal" data-target="#DetailsVacancyModal">Se Detailjer</button>
                </div>
            </div>
        }
    </div>
}

<DetailsVacancyModal Details="UncategorizedJobAdvert" />

@code {
    [Inject] JobService JobService { get; set; }

    private JobAdvert UncategorizedJobAdvert = new JobAdvert()
    {
        Company = new Company(),
        Category = new Category(),
        Specialization = new Specialization()
    };

    private List<JobAdvert> UncategorizedJobAdverts = new List<JobAdvert>();

    private bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        await Task.Delay(1000);

        UncategorizedJobAdverts = await JobService.GetUncategorizedJobVacancies();

        IsLoading = false;
        await Task.Delay(500);
    }

    private void OnClick_GetDetails(int id)
    {
        UncategorizedJobAdvert = (from job in UncategorizedJobAdverts
                                  where job.Id == id
                                  select job).First();
    }
}
