@page "/job/{JobAdvertId:int}/{JobAdvertName}";
@page "/job/{JobAdvertId:int}/{JobAdvertName}/{SpecializationId:int}/{SpecializationName}";

@using JobAgent.Data
@using JobAgent.Services
@inject JobService JobService
@inject NavigationManager NavigationManager
@* Set Job as Page Title *@
<PageTitle Title="@JobAdvertName" />

@if (jobAdverts == null || !jobAdverts.Any())
{
    <p><em>Indlæser @JobAdvertName ...</em></p>

    @if (!jobAdverts.Any())
    {
        <p><em>Ingen Jobs fundet indenfor @JobAdvertName kategori...</em></p>
    }
}
else
{
    <div class="card-columns">
        @foreach (var j in jobAdverts)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@j.Title</h5>
                    <p class="card-text">@j.JobDescription</p>
                    <p class="card-text">
                        <small class="text-muted">
                            @*<span style="display:none;">
                                    @(DateTimeToSubstract = j.JobRegisteredDate)
                                </span>
                                Stillingsopslag opdateret
                                @if (GetTimeDifference.TotalSeconds >= 60 * 60)
                                {
                                    <span>@Math.Round(GetTimeDifference.TotalHours) timer</span>
                                }
                                else if (GetTimeDifference.TotalSeconds >= 60)
                                {
                                    <span>@Math.Round(GetTimeDifference.TotalMinutes) minutter</span>
                                }
                                else
                                {
                                    <span>@Math.Round(GetTimeDifference.TotalSeconds) sekunder</span>
                                }
                                siden.*@

                            @j.JobVacancyRegisteredAgo
                        </small>
                    </p>
                    <button @onclick="@(id => OnJobPostDetail(j.Id))" class="btn btn-info btn-sm d-block" type="button" data-toggle="modal" data-target="#jobPostingDetail">Se Detailjer</button>
                </div>
            </div>

        }
    </div>
}

@* Get detailed view for job advert. *@
@* Job Detail Modal *@
<div class="modal fade" id="jobPostingDetail" tabindex="-1" role="dialog" aria-labelledby="jobPostingDetailLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="jobPostingDetailLabel">@jobAdvert.Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                @jobAdvert.JobDescription
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Tilbage</button>
                <a class="btn btn-info text-light cursor-pointer">Søg Job Opslag</a>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int JobAdvertId { get; set; }

    [Parameter]
    public string JobAdvertName { get; set; }

    [Parameter]
    public int SpecializationId { get; set; }

    [Parameter]
    public string SpecializationName { get; set; }

    JobAdvert jobAdvert = new JobAdvert();

    List<JobAdvert> jobAdverts = new List<JobAdvert>();

    protected override async Task OnInitializedAsync()
    {
        if (SpecializationId == 0) jobAdverts = await JobService.GetJobVacanciesAsync(JobAdvertId, JobAdvertName);

        if (SpecializationId != 0) jobAdverts = await JobService.GetJobSpecialVacanciesAsync(SpecializationId, SpecializationName);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (SpecializationId == 0) jobAdverts = await JobService.GetJobVacanciesAsync(JobAdvertId, JobAdvertName);

        if (SpecializationId != 0) jobAdverts = await JobService.GetJobSpecialVacanciesAsync(SpecializationId, SpecializationName);
    }

    void OnJobPostDetail(int id)
    {
        // Get details for job advert.

        jobAdvert = (from job in jobAdverts
                     where job.Id == id
                     select job).FirstOrDefault();
    }
}