@page "/admin/settings/contracts"

@using System.IO

@using JobAgent.Data
@using JobAgent.Models
@using JobAgent.Services

@inject AdminService Service
@inject IJSRuntime JSRuntime

@inherits ComponentBase

@attribute [Authorize]

@if (GetContracts.Count == 0)
{
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading">System Besked!</h4>

        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>

        <p>Fejl i Database.</p>
        <hr>
        <p>Der blev desværre ikke fundet nogen kontrakter i databasen.</p>
        <p class="mb-0">Genindlæs siden eller prøv igen senere..</p>
    </div>
}
else
{
    <div class="table-responsive table-responsive-sm table-responsive-md">
        <table class="table table-sm table-striped table-hover">
            <caption>Liste over virksomheders kontrakter..</caption>
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Virksomhed</th>
                    <th scope="col">Kontakt Person</th>
                    <th scope="col">Praktikkonsulent</th>
                    <th scope="col">Kontrakt</th>
                    <th scope="col">Kontrakt Oprettet</th>
                    <th scope="col">Udløbsdato</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var contract in GetContracts)
                {
                    <tr id="@(contract.Id)">
                        <th scope="row">@(contract.Id)</th>
                        <td>@(contract.CompanyCVR.Name)</td>
                        <td>@(contract.ContactPerson)</td>
                        <td>@(contract.SignedByUserId.FullName)</td>
                        @if (!string.IsNullOrEmpty(contract.ContractLocation))
                        {
                            <td @onclick="@(path => OnClickOpen_Contract(GetLocationPath(contract.ContractLocation)))">
                                <span class="table-icons" data-toggle="modal" data-target="#contractModal">
                                    <i class="fas fa-file-invoice"></i>
                                </span>
                            </td>
                        }
                        else
                        {
                            <td>Ingen kontrakt fundet.</td>
                        }
                        <td>@(contract.RegistrationDate.ToString("D"))</td>
                        <td>@(contract.ExpiryDate.ToString("D"))</td>
                        <td>
                            <span @onclick="(id => OnClickEdit_GetContractDetailsById(contract.Id))" data-toggle="modal" data-target="#contractDetails">
                                <Popover Title="Ændre information" Body="Ved denne funktion, kan du ændre informationen på denne kontrakt." Color="Popover.PopoverType.Info" />
                            </span>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
}

@* Contract Modal *@
<div class="modal fade" id="contractModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kontrakt</h5>
            </div>

            <div class="modal-body">
                <div class="container-fluid justify-content-center">
                    <iframe src="data:application/pdf;base64,@(ContractPath)" height="500" width="1060" lang="da" title="Kontrakt Information" frameborder="1" allowtransparency="true">
                    </iframe>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Luk kontrakt</button>
            </div>
        </div>
    </div>
</div>

@* Contract Modal Details *@
<div class="modal fade" id="contractDetails" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">

            <EditForm Model="ContractDetails" OnValidSubmit="OnValidSubmit_UpdateContract">

                <div class="modal-header">
                    <h5 class="modal-title">Kontrakt Information :</h5>
                </div>

                <div class="modal-body">
                    <div class="row">
                        <div class="col">
                            <label for="inputCompany" class="admin-label col-form-label col-form-label-sm">Kontrakt for :</label>
                            <select id="inputCompany" class="form-control form-control-sm" @bind="ContractDetails.CompanyCVR.Id">
                                @foreach (var company in GetCompanies)
                                {
                                    if (company.Id == ContractDetails.CompanyCVR.Id)
                                    {
                                        <option value="@company.Id" selected>@company.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@company.Id">@company.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col">
                            <label for="inputSignedByUser" class="admin-label col-form-label col-form-label-sm">Underskrevet af :</label>
                            <select id="inputSignedByUser" class="form-control form-control-sm" @bind="ContractDetails.SignedByUserId.Id">
                                @foreach (var user in GetUsers)
                                {
                                    if (user.Id == ContractDetails.SignedByUserId.Id)
                                    {
                                        <option value="@user.Id" selected>@user.FullName</option>
                                    }
                                    else
                                    {
                                        <option value="@user.Id">@user.FullName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col">
                            <label for="inputContactPerson" class="admin-label col-form-label col-form-label-sm">Virksomheds Kontakt Person :</label>
                            <input id="inputContactPerson" class="form-control form-control-sm" type="text" placeholder="Indtast en kontakt person.." @bind="ContractDetails.ContactPerson" />
                        </div>
                        <div class="col">
                            <label for="inputContractName" class="admin-label col-form-label col-form-label-sm">Kontraktens Navn : <span class="font-italic small" style="color: red;">*Ikke ændre dette hvis navnet på kontrakten ikke bliver ændret.</span></label>
                            <input id="inputContractName" class="form-control form-control-sm" type="text" placeholder="Indtast kontraktens fil navn / lokation.." disabled @bind="ContractDetails.ContractLocation" />
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col">
                            <label for="inputRegisteredDate" class="admin-label col-form-label col-form-label-sm">Kontrakt Registreret Dato :</label>
                            <input id="inputRegisteredDate" class="form-control form-control-sm" type="datetime" placeholder="Registrerings dato for kontrakt.." value="@(ContractDetails.RegistrationDate)" />
                        </div>
                        <div class="col">
                            <label for="inputExpiryDate" class="admin-label col-form-label col-form-label-sm">Udløbsdato :</label>
                            <input id="inputExpiryDate" class="form-control form-control-sm" type="datetime" placeholder="Udløbsdato for kontrakt.." value="@(ContractDetails.ExpiryDate)" />
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Annuller</button>
                    <button class="btn btn-info text-light cursor-pointer" type="submit">Gem ændringer</button>
                </div>

            </EditForm>

        </div>
    </div>
</div>

@code {
    public List<User> GetUsers { get; set; } = new List<User>();
    public List<Company> GetCompanies { get; set; } = new List<Company>();
    public List<Contract> GetContracts { get; set; } = new List<Contract>();

    public Contract ContractDetails = new Contract() { CompanyCVR = new Company(), SignedByUserId = new User() };

    public string ContractPath { get; set; } = string.Empty;

    public string ErrorMessage { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        GetContracts = await Service.GetContracts();
        GetCompanies = await Service.GetAllCompanies();
        GetUsers = await Service.GetUsers();
    }

    private async void OnClickEdit_GetContractDetailsById(int contractId)
    {
        ContractDetails = await Service.GetContractById(contractId);
    }

    private void OnClickOpen_Contract(string path)
    {
        ContractPath = path;
    }

    private async Task OnValidSubmit_UpdateContract()
    {
        await Task.FromResult(true);
    }

    private string GetLocationPath(string fileName)
    {
        string contractDirectory = @"\\10.108.48.72\_shared\admin\contracts\";

        try
        {
            var pdfFiles = Directory.EnumerateFiles(contractDirectory, "*.pdf");

            foreach (string currentFile in pdfFiles)
            {
                if (currentFile.Contains(fileName))
                {
                    Byte[] bytes = File.ReadAllBytes(currentFile);

                    return Convert.ToBase64String(bytes);

                    //return currentFile;
                }
            }

            return string.Empty;
        }
        catch (Exception)
        {
            throw;
        }
    }

    private void DocumentLoadFailed(LoadFailedEventArgs args)
    {
        ErrorMessage = args.DocumentName;
    }
}
