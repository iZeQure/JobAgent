@page "/admin/account/myprofile"

@using System.Timers
@using System.Threading
@using System.Security.Claims
@using JobAgent.Data
@using JobAgent.Services

@attribute [Authorize]

@inject AdminService AdminService

@if (user != null)
{
    <div class="container">
        @if (AuthorizationMessage != String.Empty && AuthorizationMessage != null)
        {
            <div class="alert alert-info">
                <div class="d-flex align-items-center">

                    <span>@AuthorizationMessage</span>

                    @if (!IsSuccess)
                    {
                        <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
                    }

                </div>
            </div>
        }
    </div>

    <EditForm Model="user" OnValidSubmit="@OnValidSubmit_ChangeUserInformation">
        <div class="container">
            <div class="row">
                <div class="col">
                    <label for="inputEmail" class="admin-label">Email Adresse :</label>
                    <input id="inputEmail" type="email" class="form-control" placeholder="Email adresse" @bind-value="user.Email" />
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col">
                    <label for="inputFirstName" class="admin-label">Fornavn :</label>
                    <input id="inputFirstName" type="text" class="form-control" placeholder="Fornavn" @bind-value="user.FirstName" />
                </div>

                <div class="col">
                    <label for="inputLastName" class="admin-label">Efternavn :</label>
                    <input id="inputLastName" type="text" class="form-control" placeholder="Efternavn" @bind-value="user.LastName" />
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col">
                    <label for="inputConsultantArea" class="admin-label">Konsulent Område :</label>
                    <select id="inputConsultantArea" class="form-control">
                        @if (consultantAreas != null)
                        {
                            @for (int i = 0; i < consultantAreas.Count; i++)
                            {
                                @if (consultantAreas[i].Id == user.ConsultantArea.Id)
                                {
                                    <option selected value="@user.ConsultantArea.Id">@user.ConsultantArea.Name</option>
                                }
                                else
                                {
                                    <option value="@consultantAreas[i].Id">@consultantAreas[i].Name</option>
                                }
                            }
                        }
                        else
                        {
                            <option>Blev ikke fundet nogen konsulent områder</option>
                        }
                    </select>
                </div>

                <div class="col">
                    <label for="inputLocation" class="admin-label">Lokation :</label>
                    <select id="inputLocation" class="form-control">
                        @if (locations != null)
                        {
                            @for (int i = 0; i < locations.Count; i++)
                            {
                                @if (locations[i].Id == user.Location.Id)
                                {
                                    <option selected value="@user.Location.Id">@user.Location.Name</option>
                                }
                                else
                                {
                                    <option value="@locations[i].Id">@locations[i].Name</option>
                                }
                            }
                        }
                        else
                        {
                            <option>Blev ikke fundet nogen lokationer</option>
                        }
                    </select>
                </div>
            </div>
            <hr />
            <button type="submit" class="btn btn-info float-right ml-auto mt-5" disabled="@IsProcessing">Gem bruger oplysninger</button>
        </div>

    </EditForm>
}

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    private int Count { get; set; } = 10;
    private bool IsSuccess { get; set; } = false;
    private bool IsProcessing { get; set; } = false;
    string AuthorizationMessage { get; set; } = String.Empty;

    private List<ConsultantArea> consultantAreas = new List<ConsultantArea>();
    private List<Location> locations = new List<Location>();

    private User user = new User()
    {
        ConsultantArea = new ConsultantArea(),
        Location = new Location()
    };
    private ClaimsPrincipal claimUser;

    protected override async Task OnInitializedAsync()
    {
        claimUser = (await AuthenticationState).User;

        foreach (Claim item in claimUser.Claims)
        {
            if (item.Type == ClaimTypes.Email) user.Email = item.Value;
            if (item.ValueType == "UserId") user.Id = int.Parse(item.Value);
        }
        user = await AdminService.GetUserByEmail(user.Email);
        consultantAreas = await AdminService.GetAllConsultantAreas();
        locations = await AdminService.GetAllLocations();
    }

    private async Task OnValidSubmit_ChangeUserInformation()
    {
        IsSuccess = false;
        IsProcessing = true;
        AuthorizationMessage = "Vent venligst..";

        await Task.Delay(TimeSpan.FromSeconds(5));

        await InvokeAsync(() =>
        {
            AdminService.UpdateUserInformation(user);
            AuthorizationMessage = "Bruger oplsyninger blev opdateret!";
            StateHasChanged();
        });

        IsSuccess = true;
        IsProcessing = false;
    }
}
