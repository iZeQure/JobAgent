@page "/login"

@using System.Security.Claims
@using JobAgent.Models
@using JobAgent.Data
@using JobAgent.Data.Interfaces

@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavigationManager

@* Login Form *@
<EditForm Model="UserLogInModel" OnValidSubmit="@ValidateUserAsync">

    @if (LoginMessage != String.Empty)
    {
        <BSAlert Color="Color.Danger">@LoginMessage</BSAlert>
    }

    <DataAnnotationsValidator />
    <ValidationSummary />

    <BSFormGroup>
        <BSLabel For="inputEmail1">Email Adresse</BSLabel>
        <BSInput Id="inputEmail1" InputType="InputType.Email" PlaceHolder="Indtast email adresse.." @bind-Value="UserLogInModel.Email" />
    </BSFormGroup>
    <BSFormGroup>
        <BSLabel For="inputPassword">Adgangskode</BSLabel>
        <BSInput Id="inputPassword" InputType="InputType.Password" Placeholder="Indtast adgangskode.." @bind-Value="UserLogInModel.Password" />
    </BSFormGroup>
    <BSButton Color="Color.Info" ButtonType="ButtonType.Submit" Class="btn-block mr-2" IsDisabled="@IsProcessing">Log ind</BSButton>

</EditForm>

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    public LogInModel UserLogInModel { get; set; } = new LogInModel();

    public User User { get; set; } = new User();

    private ClaimsPrincipal claimsPrincipal { get; set; }

    public string LoginMessage { get; set; } = String.Empty;

    public bool IsProcessing { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        claimsPrincipal = (await AuthenticationState).User;

        if (claimsPrincipal.Identity.IsAuthenticated)
        {
            await Task.FromResult(PageMetaModel.Instance.Title = $"Velkommen, {User.FirstName} {User.LastName}");
            NavigationManager.NavigateTo("/admin", true);
        }
    }

    private async Task<bool> ValidateUserAsync()
    {
        IsProcessing = true;

        User.Email = UserLogInModel.Email;
        User.Password = UserLogInModel.Password;

        User = await ((CustomAuthenticationStateProvider)AuthProvider).UserSerivce.LoginAsync(User);
        //User = await UserService.LoginAsync(User);

        if (User.IsAuthenticatedByServer)
        {
            if (User.Email != null)
            {
                await Task.FromResult(PageMetaModel.Instance.Title = $"Velkommen, {User.FirstName} {User.LastName}");
                await ((CustomAuthenticationStateProvider)AuthProvider).MarkUserAuthenticated(User);
                NavigationManager.NavigateTo("/admin", true);
            }
            else
            {
                LoginMessage = "Forkert email eller adgangskode.";
            }
        }
        else
        {
            LoginMessage = "Forkert email eller adgangskode.";
        }

        return await Task.FromResult(IsProcessing = false);
    }
}